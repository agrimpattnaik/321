{"version":3,"sources":["utils/media-session.js","actions/index.js","components/AddSongs.jsx","components/Song.jsx","components/SongList.jsx","components/NowPlaying.jsx","views/MainView.jsx","components/Header.jsx","components/PlayingCtrl.jsx","views/PlayingView.jsx","utils/keyboardEvents.js","App.jsx","registerServiceWorker.js","reducers/songs.js","reducers/playState.js","reducers/common.js","reducers/index.js","reducers/page.js","index.js","store/localStore.js"],"names":["store","mediaSessionEnabled","navigator","mediaSession","setActionHandler","state","getState","prevId","playState","songId","songs","length","dispatch","playSong","nextId","togglePlaying","media_session","s","song","id","metadata","window","MediaMetadata","title","name","artist","album","artwork","src","sizes","type","addNewSong","PLAYLIST_PAGE","SETTINGS_PAGE","NOW_PLAYING_PAGE","addSongs","AddSongs","addSong","e","add","_this","props","currentTarget","files","react_default","a","createElement","Fab_default","color","aria-label","component","htmlFor","style","position","bottom","right","zIndex","display","onChange","this","multiple","accept","Add_default","Component","connect","Song","_ref","handleClick","handleIconClick","isPlaying","ListItem_default","className","onClick","ListItemAvatar_default","Avatar_default","Equalizer_default","MusicNote_default","ListItemText_default","primary","secondary","ListItemSecondaryAction_default","IconButton_default","MoreVert_default","remove","play","_useState","useState","_useState2","Object","slicedToArray","anchorEl","setAnchorEl","_useState3","_useState4","activeSong","setActiveSong","setActiveSongItem","ind","_ref2","target","handleSongClick","marginBottom","Menu_default","open","Boolean","onClose","MenuItem_default","List_default","map","components_Song","key","concat","lastModifiedDate","Divider_default","fontWeight","textAlign","NowPlaying","playingSong","currentTime","openNowPlaying","Paper_default","closest","LinearProgress_default","variant","value","playing","Pause_default","PlayCircleFilled_default","defaultProps","MainView","handleDragOver","event","preventDefault","stopPropagation","dataTransfer","dropEffect","_this2","_this$props","openSnackbar","toggle","onDragOver","onDrop","File","FileReader","FileList","Blob","toConsumableArray","filter","endsWith","components_SongList","components_AddSongs","components_NowPlaying","menuOptions","option","page","icon","Home_default","PlaylistPlay_default","icons_List_default","Settings_default","Header","openPage","setState","prevState","AppBar_default","Toolbar_default","icons_Menu_default","Typography_default","height","SwipeableDrawer_default","anchor","onOpen","paddingTop","button","ListItemIcon_default","PlayingCtrl","changeRepeat","repeat","repeatType","installEvent","setTimeout","_this$props2","playNext","playPrevious","timeDrag","Slider_default","_","newVal","max","min","defaultValue","width","RepeatOne_default","Repeat_default","opacity","SkipPrevious_default","PauseCircleFilled_default","SkipNext_default","Shuffle_default","common","PlayingView","justifyContent","alignItems","marginTop","Album_default","fontSize","components_PlayingCtrl","ACTION_KEYS","App","classCallCheck","_super","call","URL","revokeObjectURL","songEnded","_this$props3","updateTime","audioPlayer","duration","fileSrc","createObjectURL","document","replace","time","handleActionClick","handleRequestClose","snackBarOpen","snackMsg","hideSnackAction","hasRejectedInstall","addToHomeScreenUIVisible","_this$props4","releaseKeyboardEvents","handlers","handler","upperCaseKey","code","toUpperCase","indexOf","addEventListener","removeEventListener","keyboardEvents","nextProps","_this3","_this$state","console","log","pause","prompt","userChoice","then","choiceResult","outcome","_this4","_this$state2","_this$props5","Fragment","components_Header","hidden","controls","onEnded","onTimeUpdate","ref","audio","assign","kind","views_PlayingView","msg","views_MainView","Snackbar_default","autoHideDuration","ContentProps","aria-describedby","message","action","Button_default","size","isLocalhost","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","initalState","initialState","sidebarOpen","reducers","combineReducers","arguments","undefined","index","objectSpread","muiTheme","createMuiTheme","palette","deepPurple","LocalForage","localState","createStore","mediaNotification","subscribe","ReactDOM","render","es","styles","theme","src_App","getElementById","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2853e1fa.chunk.js","sourcesContent":["/* eslint-disable import/no-cycle */\n\nimport { togglePlaying, playSong } from '../actions';\n\nlet store;\nconst mediaSessionEnabled = ('mediaSession' in navigator);\nconst addNewSong = (id) => {\n  const state = store.getState();\n  navigator.mediaSession.metadata = new window.MediaMetadata({\n    title: state.songs[id].name,\n    artist: 'Unknown',\n    album: 'Unknown Albumn',\n    artwork: [{\n      src: 'icons/mipmap-xhdpi/ic_launcher.png',\n      sizes: '96x96',\n      type: 'image/png',\n    }, {\n      src: 'icons/mipmap-xxhdpi/ic_launcher.png',\n      sizes: '144x144',\n      type: 'image/png',\n    }, {\n      src: 'icons/mipmap-xxxhdpi/ic_launcher.png',\n      sizes: '192x192',\n      type: 'image/png',\n    }, {\n      src: 'icons/playstore/icon.png',\n      sizes: '512x512',\n      type: 'image/png',\n    }],\n  });\n};\n\nconst addActionListeners = () => {\n  navigator.mediaSession.setActionHandler('previoustrack', () => {\n    if (store) {\n      const state = store.getState();\n      const prevId = state.playState.songId === 0\n        ? state.songs.length - 1 : state.playState.songId - 1;\n      store.dispatch(playSong(prevId));\n    }\n  });\n\n  navigator.mediaSession.setActionHandler('nexttrack', () => {\n    if (store) {\n      const state = store.getState();\n      const nextId = (state.playState.songId + 1) % state.songs.length;\n      store.dispatch(playSong(nextId));\n    }\n  });\n\n  navigator.mediaSession.setActionHandler('play', () => {\n    if (store) store.dispatch(togglePlaying());\n  });\n\n  navigator.mediaSession.setActionHandler('pause', () => {\n    if (store) store.dispatch(togglePlaying());\n  });\n};\nif (mediaSessionEnabled) addActionListeners();\n\nexport default {\n  setStore(s) {\n    store = s;\n  },\n  playSong(song) {\n    if (mediaSessionEnabled) {\n      addNewSong(song);\n    }\n  },\n};\n","/* eslint-disable import/no-cycle */\nimport mediaSession from '../utils/media-session';\n\nexport const ADD_SONGS = 'ADD_SONGS';\nexport const REMOVE_SONGS = 'REMOVE_SONGS';\nexport const TOGGLE_PLAYING = 'TOGGLE_PLAYING';\nexport const FILTER_SONGS = 'FILTER_SONGS';\nexport const PLAY_SONG = 'PLAY_SONG';\nexport const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\nexport const PLAYLIST_PAGE = 'PLAYLIST_PAGE';\nexport const SHUFFLE = 'SHUFFLE';\nexport const REPEAT = 'REPEAT';\nexport const HOME_PAGE = 'HOME_PAGE';\nexport const SETTINGS_PAGE = 'SETTINGS_PAGE';\nexport const NOW_PLAYING_PAGE = 'NOW_PLAYING_PAGE';\n\nexport const addSongs = songs => ({\n  type: ADD_SONGS,\n  songs,\n});\n\nexport const removeSong = id => ({\n  type: REMOVE_SONGS,\n  id,\n});\n\nexport const playSong = (id) => {\n  mediaSession.playSong(id);\n  return {\n    type: PLAY_SONG,\n    id,\n  };\n};\n\nexport const repeatType = id => ({\n  type: REPEAT,\n  id,\n});\n\nexport const togglePlaying = () => ({\n  type: TOGGLE_PLAYING,\n});\n\nexport const toggleSidebar = () => ({\n  type: TOGGLE_SIDEBAR,\n});\n\nexport const filterSong = filter => ({\n  type: FILTER_SONGS,\n  filter,\n});\n\nexport const homePage = () => ({\n  type: HOME_PAGE,\n});\n\nexport const nowPlayingPage = () => ({\n  type: NOW_PLAYING_PAGE,\n});\n\nexport const settingsPage = () => ({\n  type: SETTINGS_PAGE,\n});\n","import React, { Component } from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addSongs } from '../actions';\n\nconst mapDispatchToProps = dispatch => ({\n  addSongs: songs => dispatch(addSongs(songs)),\n});\n\nclass AddSongs extends Component {\n  addSong = (e) => {\n    const { addSongs: add } = this.props;\n    add(e.currentTarget.files);\n  }\n\n  render() {\n    return (\n      <Fab\n        color=\"primary\"\n        aria-label=\"Add\"\n        component=\"label\"\n        htmlFor=\"song-input\"\n        style={{\n          position: 'fixed', bottom: '110px', right: '25px', zIndex: 3000,\n        }}\n      >\n        <input\n          style={{ display: 'none' }}\n          id=\"song-input\"\n          onChange={this.addSong}\n          type=\"file\"\n          multiple\n          accept=\"audio/mp3\"\n        />\n        <AddIcon />\n      </Fab>\n    );\n  }\n}\n\nAddSongs.propTypes = {\n  addSongs: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(AddSongs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport MusicNote from '@material-ui/icons/MusicNote';\n\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\n\nconst Song = ({\n  song, handleClick, handleIconClick, isPlaying,\n}) => (\n  <ListItem className=\"song\" onClick={handleClick}>\n    <ListItemAvatar>\n      <Avatar>\n        { !isPlaying ? <MusicNote /> : <EqualizerIcon /> }\n      </Avatar>\n    </ListItemAvatar>\n    <ListItemText\n      primary={song.name}\n      secondary={null}\n    />\n    <ListItemSecondaryAction onClick={handleIconClick}>\n      <IconButton aria-label=\"Delete\">\n        <MoreVert />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n\nSong.propTypes = {\n  song: PropTypes.objectOf(PropTypes.any).isRequired,\n  handleClick: PropTypes.func.isRequired,\n  handleIconClick: PropTypes.func.isRequired,\n  isPlaying: PropTypes.bool.isRequired,\n};\nexport default Song;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport connect from 'react-redux/es/connect/connect';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { removeSong, playSong } from '../actions';\nimport Song from './Song';\n\nconst mapStateToProps = store => ({\n  playState: store.playState,\n});\n\nconst SongList = ({\n  songs, remove, play, playState,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [activeSong, setActiveSong] = useState(-1);\n\n  const setActiveSongItem = ind => ({ target }) => {\n    setAnchorEl(target);\n    setActiveSong(ind);\n  };\n\n  const handleSongClick = ind => () => play(ind);\n\n  if (!songs.length) {\n    return (\n      <h4 style={{ fontWeight: 300, textAlign: 'center' }}>No Songs Present. Please Add Songs</h4>\n    );\n  }\n  return (\n    <div style={{ marginBottom: '100px' }}>\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\n        <MenuItem onClick={() => remove(activeSong)}>Remove Song</MenuItem>\n      </Menu>\n      <List>\n        {\n          songs.map((song, ind) => (\n            [\n              <Song\n                key={`song-${song.lastModifiedDate}`}\n                handleClick={handleSongClick(ind)}\n                handleIconClick={setActiveSongItem(ind)}\n                song={song}\n                isPlaying={ind === playState.songId}\n              />,\n              <Divider key={`divider-${song.lastModifiedDate}`} />,\n            ]\n          ))\n        }\n      </List>\n    </div>\n  );\n};\n\nSongList.propTypes = {\n  remove: PropTypes.func.isRequired,\n  play: PropTypes.func.isRequired,\n  songs: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)).isRequired,\n  playState: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default connect(mapStateToProps, { remove: removeSong, play: playSong })(SongList);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport Paper from '@material-ui/core/Paper';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport MusicNote from '@material-ui/icons/MusicNote';\nimport PlayIcon from '@material-ui/icons/PlayCircleFilled';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst NowPlaying = ({\n  playState, playingSong, currentTime, togglePlaying, openNowPlaying,\n}) => {\n  const handleClick = (e) => {\n    if (!e.target.closest('[type=\"button\"]') && playingSong) {\n      openNowPlaying();\n    }\n  };\n\n  return (\n    <Paper className=\"small-now-playing\" onClick={handleClick}>\n      <LinearProgress variant=\"determinate\" value={currentTime} />\n      <div className=\"now-playing-container\">\n        <Avatar>\n          <MusicNote />\n        </Avatar>\n        <div className=\"song-name\">\n          {playingSong ? playingSong.name : '[No song]'}\n        </div>\n        <button type=\"button\" onClick={togglePlaying}>\n          { playState.playing ? <PauseIcon /> : <PlayIcon /> }\n        </button>\n      </div>\n    </Paper>\n  );\n};\n\nNowPlaying.defaultProps = {\n  playingSong: null,\n};\n\nNowPlaying.propTypes = {\n  playState: propTypes.objectOf(propTypes.any).isRequired,\n  playingSong: propTypes.objectOf(propTypes.any),\n  currentTime: propTypes.number.isRequired,\n  togglePlaying: propTypes.func.isRequired,\n  openNowPlaying: propTypes.func.isRequired,\n};\n\nexport default NowPlaying;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\n\nimport AddSongs from '../components/AddSongs';\nimport SongList from '../components/SongList';\nimport NowPlaying from '../components/NowPlaying';\nimport { togglePlaying, nowPlayingPage, addSongs } from '../actions';\n\nconst mapDispatchToProps = dispatch => ({\n  toggle: () => dispatch(togglePlaying()),\n  openNowPlaying: () => dispatch(nowPlayingPage()),\n  addSongs: songs => dispatch(addSongs(songs)),\n});\n\nclass MainView extends Component {\n  handleDragOver = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    // eslint-disable-next-line no-param-reassign\n    event.dataTransfer.dropEffect = 'copy';\n  };\n\n  render() {\n    const {\n      songs, playState, openNowPlaying, openSnackbar, currentTime, addSongs: add, toggle,\n    } = this.props;\n    return (\n      <div\n        onDragOver={this.handleDragOver}\n        onDrop={(event) => {\n          this.handleDragOver(event);\n          if (window.File && window.FileReader && window.FileList && window.Blob) {\n            const files = [...event.dataTransfer.files].filter(({ name }) => name && name.endsWith('.mp3'));\n            if (files.length > 0) add(files);\n          } else {\n            openSnackbar('The File APIs are not fully supported in this browser.');\n          }\n          return false;\n        }}\n      >\n        <SongList songs={songs} />\n        <AddSongs />\n        <NowPlaying\n          togglePlaying={toggle}\n          playState={playState}\n          playingSong={songs[playState.songId]}\n          openNowPlaying={openNowPlaying}\n          currentTime={currentTime}\n        />\n      </div>\n    );\n  }\n}\n\nMainView.propTypes = {\n  openNowPlaying: propTypes.func.isRequired,\n  toggle: propTypes.func.isRequired,\n  addSongs: propTypes.func.isRequired,\n  songs: propTypes.arrayOf(propTypes.any).isRequired,\n  playState: propTypes.objectOf(propTypes.any).isRequired,\n  currentTime: propTypes.number.isRequired,\n  openSnackbar: propTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(MainView);\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NowPlayingIcon from '@material-ui/icons/PlaylistPlay';\nimport PlayListIcon from '@material-ui/icons/List';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport {\n  HOME_PAGE, SETTINGS_PAGE, NOW_PLAYING_PAGE, PLAYLIST_PAGE,\n} from '../actions';\n\nconst mapDispatchToProps = dispatch => ({\n  openPage: type => dispatch({ type }),\n});\n\nconst menuOptions = [\n  {\n    option: 'Home',\n    page: HOME_PAGE,\n    icon: <HomeIcon />,\n  },\n  {\n    option: 'NowPlaying',\n    page: NOW_PLAYING_PAGE,\n    icon: <NowPlayingIcon />,\n  },\n  {\n    option: 'Playlists',\n    page: PLAYLIST_PAGE,\n    icon: <PlayListIcon />,\n  },\n  {\n    option: 'Settings',\n    page: SETTINGS_PAGE,\n    icon: <SettingsIcon />,\n  },\n];\n\nclass Header extends Component {\n  state = {\n    open: false,\n  };\n\n  openPage = page => () => {\n    const { openPage, playState, openSnackbar } = this.props;\n    this.setState(prevState => ({ open: !prevState.open }));\n    if (page === PLAYLIST_PAGE || page === SETTINGS_PAGE) {\n      openSnackbar();\n      return;\n    }\n    // Don't Open now playing page when there is no song\n    if (!playState && page === NOW_PLAYING_PAGE) return;\n    if (page) openPage(page);\n  }\n\n  render() {\n    const { open } = this.state;\n    return (\n      <div>\n        <AppBar>\n          <Toolbar>\n            <IconButton onClick={this.openPage()} color=\"inherit\" aria-label=\"Menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\">\n              Music Player\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div className=\"header-padding\" style={{ height: '55px' }} />\n        <SwipeableDrawer anchor=\"left\" open={open} onClose={this.openPage()} onOpen={this.openPage()}>\n          <div style={{ paddingTop: '50px' }} />\n          {\n            menuOptions.map(option => (\n              <ListItem key={option.option} button onClick={this.openPage(option.page)}>\n                <ListItemIcon>{option.icon}</ListItemIcon>\n                <ListItemText>{option.option}</ListItemText>\n              </ListItem>\n            ))\n          }\n        </SwipeableDrawer>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  openPage: propTypes.func.isRequired,\n  playState: propTypes.objectOf(propTypes.any).isRequired,\n  openSnackbar: propTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport Slider from '@material-ui/lab/Slider';\nimport Paper from '@material-ui/core/Paper';\nimport SkipPrevious from '@material-ui/icons/SkipPrevious';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayIcon from '@material-ui/icons/PlayCircleFilled';\nimport PauseIcon from '@material-ui/icons/PauseCircleFilled';\nimport SkipNext from '@material-ui/icons/SkipNext';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport Repeat from '@material-ui/icons/Repeat';\nimport RepeatOne from '@material-ui/icons/RepeatOne';\nimport { repeatType, togglePlaying } from '../actions';\n\nconst mapStateToProps = state => ({\n  playState: state.playState,\n  repeatType: state.common.repeat,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeRepeat: id => dispatch(repeatType(id)),\n  togglePlaying: () => dispatch(togglePlaying()),\n});\n\nclass PlayingCtrl extends Component {\n  componentDidMount() {\n    const { installEvent } = this.props;\n    setTimeout(() => typeof installEvent === 'function' && installEvent(), 3000);\n  }\n\n  changeRepeat = () => {\n    const { repeatType: repeat, changeRepeat } = this.props;\n    const nextRepeat = repeat === 2 ? 0 : repeat + 1;\n    changeRepeat(nextRepeat);\n  }\n\n  render() {\n    const {\n      playState, song, playNext, playPrevious, currentTime, repeatType: repeat,\n      togglePlaying: toggle, timeDrag, openSnackbar,\n    } = this.props;\n\n    return (\n      <Paper className=\"play-control\">\n        <h3 className=\"song-title\">{ song.name }</h3>\n        <Slider style={{ height: '2px' }} className=\"song-progress\" value={currentTime} onChange={(_, newVal) => timeDrag(newVal)} max={100} min={0} defaultValue={2} />\n        <div className=\"now-playing-container\">\n          <div style={{ width: '35%', textAlign: 'center' }} className=\"side-icons\">\n            <IconButton onClick={this.changeRepeat}>\n              { repeat === 1\n                ? <RepeatOne /> : <Repeat style={repeat === 2 ? {} : { opacity: 0.5 }} />\n              }\n            </IconButton>\n            <IconButton onClick={playPrevious}>\n              <SkipPrevious />\n            </IconButton>\n          </div>\n          <div style={{ width: '30%', textAlign: 'center' }} className=\"play-pause-button\">\n            <IconButton onClick={toggle}>\n              { playState.playing ? <PauseIcon /> : <PlayIcon /> }\n            </IconButton>\n          </div>\n          <div style={{ width: '35%', textAlign: 'center' }} className=\"side-icons\">\n            <IconButton onClick={playNext}>\n              <SkipNext />\n            </IconButton>\n            <ShuffleIcon\n              className=\"material-icons\"\n              style={{ color: 'rgba(0, 0, 0, 0.3)' }}\n              onClick={() => openSnackbar('Shuffle doesn\\'t work yet, You can make a PR 😊')}\n            />\n          </div>\n        </div>\n      </Paper>\n    );\n  }\n}\n\nPlayingCtrl.defaultProps = {\n  installEvent: null,\n};\n\nPlayingCtrl.propTypes = {\n  timeDrag: propTypes.func.isRequired,\n  playNext: propTypes.func.isRequired,\n  playPrevious: propTypes.func.isRequired,\n  openSnackbar: propTypes.func.isRequired,\n  repeatType: propTypes.number.isRequired,\n  changeRepeat: propTypes.func.isRequired,\n  currentTime: propTypes.number.isRequired,\n  togglePlaying: propTypes.func.isRequired,\n  song: propTypes.objectOf(propTypes.any).isRequired,\n  playState: propTypes.objectOf(propTypes.any).isRequired,\n  installEvent: propTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayingCtrl);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport Album from '@material-ui/icons/Album';\n\nimport PlayingCtrl from '../components/PlayingCtrl';\n\nconst PlayingView = ({\n  playNext,\n  timeDrag,\n  repeatType,\n  currentTime,\n  playingSong,\n  openSnackbar,\n  playPrevious,\n  installEvent,\n}) => (\n  <div>\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '30px',\n      }}\n    >\n      <Album\n        style={{ width: '300px', fontSize: '300px', color: 'rgba(0,0,0,0.3)' }}\n      />\n    </div>\n    <PlayingCtrl\n      song={playingSong}\n      playNext={playNext}\n      timeDrag={timeDrag}\n      repeatType={repeatType}\n      installEvent={installEvent}\n      currentTime={currentTime}\n      openSnackbar={openSnackbar}\n      playPrevious={playPrevious}\n    />\n  </div>\n);\n\nPlayingView.defaultProps = {\n  installEvent: () => {},\n};\n\nPlayingView.propTypes = {\n  timeDrag: propTypes.func.isRequired,\n  playNext: propTypes.func.isRequired,\n  repeatType: propTypes.number.isRequired,\n  openSnackbar: propTypes.func.isRequired,\n  playPrevious: propTypes.func.isRequired,\n  installEvent: propTypes.func,\n  currentTime: propTypes.number.isRequired,\n  playingSong: propTypes.objectOf(propTypes.any).isRequired,\n};\n\nexport default PlayingView;\n","const ACTION_KEYS = [\n  'ARROWLEFT',\n  'ARROWRIGHT',\n  'SPACE',\n];\n\nexport default function keyboardEvents(handlers) {\n  const handler = (e) => {\n    const upperCaseKey = e.code.toUpperCase();\n\n    if (ACTION_KEYS.indexOf(upperCaseKey) === -1) {\n      return;\n    }\n\n    const {\n      playNext,\n      playPrevious,\n      togglePlaying,\n    } = handlers;\n\n    switch (upperCaseKey) {\n      case 'ARROWLEFT':\n        playPrevious();\n        break;\n      case 'ARROWRIGHT':\n        playNext();\n        break;\n      case 'SPACE':\n        togglePlaying();\n        break;\n      default:\n        break;\n    }\n  };\n  window.addEventListener('keydown', handler);\n  return () => window.removeEventListener('keydown', handler);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport { NOW_PLAYING_PAGE, togglePlaying, playSong } from './actions';\n\nimport MainView from './views/MainView';\nimport Header from './components/Header';\nimport PlayingView from './views/PlayingView';\nimport keyboardEvents from './utils/keyboardEvents';\n\n\nconst mapStateToProps = state => ({\n  page: state.page,\n  songs: state.songs,\n  playState: state.playState,\n  repeatType: state.common.repeat,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggle: () => dispatch(togglePlaying()),\n  playSong: id => dispatch(playSong(id)),\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTime: 0,\n      snackBarOpen: false,\n      hasRejectedInstall: false,\n      snackMsg: '',\n      hideSnackAction: false,\n      installEvent: null,\n      addToHomeScreenUIVisible: false,\n    };\n  }\n\n  componentDidMount() {\n    const { songs, toggle } = this.props;\n    if (songs[0]) {\n      this.audioPlayer.src = URL.createObjectURL(songs[0]);\n    }\n    this.releaseKeyboardEvents = keyboardEvents({\n      playNext: this.playNext,\n      playPrevious: this.playPrevious,\n      togglePlaying: toggle,\n    });\n    window.addEventListener('beforeinstallprompt', (e) => {\n      // Prevent Chrome 67 and earlier from automatically showing the prompt\n      e.preventDefault();\n      // Stash the event so it can be triggered later.\n      this.setState({ installEvent: e, addToHomeScreenUIVisible: true });\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { playState } = this.props;\n    const { installEvent, hasRejectedInstall } = this.state;\n    if (nextProps.playState !== playState) {\n      if (!nextProps.playState.playing) {\n        // PAUSE\n        this.audioPlayer.pause();\n      } else if (nextProps.playState.songId === -1) {\n        this.playSong(0);\n      } else if (nextProps.playState.songId === playState.songId) {\n        // RESUME\n        console.log('Should only resume');\n        this.audioPlayer.play();\n        // Start playing\n      } else {\n        this.playSong(nextProps.playState.songId);\n      }\n      if (installEvent && !hasRejectedInstall) {\n        installEvent.prompt();\n        installEvent.userChoice.then((choiceResult) => {\n          if (choiceResult.outcome === 'accepted') {\n            this.setState({\n              snackBarOpen: true,\n              hideSnackAction: true,\n              hasRejectedInstall: false,\n              snackMsg: '🤗 Yay! You\\'ve installed the app',\n            });\n          } else {\n            this.setState({\n              snackBarOpen: true,\n              hideSnackAction: true,\n              hasRejectedInstall: true,\n              snackMsg: '😥 Reload the page whenever you change your mind',\n            });\n          }\n          this.snackBarOpen({ installEvent: null });\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.releaseKeyboardEvents();\n  }\n\n  playNext = () => {\n    const { songs, playState, playSong: play } = this.props;\n    URL.revokeObjectURL(songs[playState.songId]);\n    const nextSongId = (playState.songId + 1) % songs.length;\n    play(nextSongId);\n  }\n\n  songEnded = () => {\n    const {\n      songs, playState, repeatType, playSong: play,\n    } = this.props;\n    // No repeat\n    if (repeatType === 0) {\n      URL.revokeObjectURL(songs[playState.songId]);\n      if (playState.songId < songs.length - 1) play(playState.songId + 1);\n    } else if (repeatType === 1) {\n      // repeat one\n      play(playState.songId);\n    // repeat all\n    } else this.playNext();\n  }\n\n  playPrevious = () => {\n    const { songs, playState, playSong: play } = this.props;\n    URL.revokeObjectURL(songs[playState.songId]);\n    const prevSongId = playState.songId === 0 ? songs.length - 1 : playState.songId - 1;\n    play(prevSongId);\n  }\n\n  updateTime = () => {\n    const currentTime = 100 * this.audioPlayer.currentTime / this.audioPlayer.duration || 0;\n    this.setState({ currentTime });\n  }\n\n  playSong = (id) => {\n    const { songs } = this.props;\n    if (songs[id]) {\n      const fileSrc = URL.createObjectURL(songs[id]);\n      this.audioPlayer.src = fileSrc;\n      this.audioPlayer.play();\n      window.document.title = songs[id].name.replace('.mp3', '');\n    }\n  }\n\n  timeDrag = (time) => {\n    this.audioPlayer.currentTime = this.audioPlayer.duration * (time / 100);\n  }\n\n  handleActionClick = () => {\n    window.open('https://github.com/ashinzekene/react-music-player', '_blank');\n  }\n\n  handleRequestClose = () => {\n    this.setState({ snackBarOpen: false, snackMsg: '', hideSnackAction: false });\n  }\n\n  render() {\n    const {\n      currentTime, snackBarOpen, snackMsg, installEvent, addToHomeScreenUIVisible, hideSnackAction,\n    } = this.state;\n    const {\n      songs, playState, toggle, repeatType, page,\n    } = this.props;\n    return (\n      <>\n        <Header\n          playState={playState}\n          addToHomeScreenUIVisible={addToHomeScreenUIVisible}\n          playingSong={songs[playState.songId]}\n          openSnackbar={() => this.setState({ snackBarOpen: true })}\n        />\n        <audio\n          hidden\n          controls\n          onEnded={this.songEnded}\n          onTimeUpdate={this.updateTime}\n          ref={(audio) => { this.audioPlayer = audio; }}\n        >\n          <track kind=\"captions\" {...{}} />\n        </audio>\n        {\n          page === NOW_PLAYING_PAGE ? (\n            <PlayingView\n              repeatType={repeatType}\n              playNext={this.playNext}\n              timeDrag={this.timeDrag}\n              installEvent={installEvent}\n              currentTime={currentTime}\n              playPrevious={this.playPrevious}\n              playingSong={songs[playState.songId]}\n              openSnackbar={msg => this.setState({ snackBarOpen: true, snackMsg: msg })}\n            />\n          ) : (\n            <MainView\n              songs={songs}\n              toggle={toggle}\n              playState={playState}\n              currentTime={currentTime}\n              openSnackbar={msg => this.setState({ snackBarOpen: true, snackMsg: msg })}\n            />\n          )}\n        <Snackbar\n          open={snackBarOpen}\n          autoHideDuration={6000}\n          onClose={this.handleRequestClose}\n          ContentProps={{ 'aria-describedby': 'message-id' }}\n          message={(\n            <span id=\"message-id\">{snackMsg || 'Not Implemented yet 😊'}</span>\n          )}\n          action={\n            !hideSnackAction && (\n              <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleActionClick}>\n                MAKE A PR\n              </Button>\n            )}\n        />\n      </>\n    );\n  }\n}\n\nApp.propTypes = {\n  page: PropTypes.string.isRequired,\n  songs: PropTypes.arrayOf(PropTypes.any).isRequired,\n  playState: PropTypes.shape({\n    playing: PropTypes.bool.isRequired,\n    songId: PropTypes.number.isRequired,\n  }).isRequired,\n  repeatType: PropTypes.oneOf([0, 1, 2]).isRequired,\n  toggle: PropTypes.func.isRequired,\n  playSong: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404\n        || response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_SONGS, REMOVE_SONGS } from '../actions';\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case ADD_SONGS: {\n      return [...state, ...action.songs];\n    }\n    case REMOVE_SONGS: {\n      return state.filter((song, index) => index !== action.id);\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { PLAY_SONG, TOGGLE_PLAYING } from '../actions/index';\n\nconst initalState = {\n  playing: false,\n  songId: -1,\n};\n\nexport default (state = initalState, action) => {\n  switch (action.type) {\n    case PLAY_SONG: {\n      return { playing: true, songId: action.id };\n    }\n    case TOGGLE_PLAYING: {\n      return Object.assign({}, state, { playing: !state.playing });\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { TOGGLE_SIDEBAR, REPEAT } from '../actions/index';\n\nconst initialState = {\n  sidebarOpen: false,\n  repeat: 0,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_SIDEBAR: {\n      return { ...state, sidebarOpen: !state.sidebarOpen };\n    }\n    case REPEAT: {\n      return { ...state, repeat: action.id };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { combineReducers } from 'redux';\nimport songs from './songs';\nimport playState from './playState';\nimport common from './common';\nimport page from './page';\n\nconst reducers = combineReducers({\n  songs,\n  common,\n  playState,\n  page,\n});\n\nexport default reducers;\n","import {\n  HOME_PAGE, NOW_PLAYING_PAGE, SETTINGS_PAGE, PLAYLIST_PAGE,\n} from '../actions/index';\n\nexport default (state = HOME_PAGE, action) => {\n  switch (action.type) {\n    case HOME_PAGE: {\n      return HOME_PAGE;\n    }\n    case PLAYLIST_PAGE: {\n      return PLAYLIST_PAGE;\n    }\n    case NOW_PLAYING_PAGE: {\n      return NOW_PLAYING_PAGE;\n    }\n    case SETTINGS_PAGE: {\n      return SETTINGS_PAGE;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport reducers from './reducers';\nimport loggerMiddleware from './middleware';\nimport { saveState, getState } from './store/localStore';\nimport mediaNotification from './utils/media-session';\n\nconst muiTheme = createMuiTheme({\n  palette: {\n    primary: deepPurple,\n  },\n});\n\n\ngetState().then((localState) => {\n  let store;\n  if (process.env.NODE_ENV === 'development') {\n    store = createStore(reducers, localState, applyMiddleware(loggerMiddleware));\n  } else {\n    store = createStore(reducers, localState);\n  }\n  mediaNotification.setStore(store);\n  store.subscribe(() => {\n    saveState({\n      songs: store.getState().songs,\n    });\n  });\n  ReactDOM.render(\n    // eslint-disable-next-line\n    <Provider store={store}>\n      <MuiThemeProvider theme={muiTheme}>\n        <App />\n      </MuiThemeProvider>\n    </Provider>, document.getElementById('root'),\n  );\n});\nregisterServiceWorker();\n","import * as LocalForage from 'localforage';\n\nexport const saveState = (state) => {\n  LocalForage.setItem('state', state);\n};\n\nexport const getState = () => LocalForage.getItem('state').then((state) => {\n  if (state === null) {\n    return undefined;\n  }\n  return state;\n});\n"],"sourceRoot":""}